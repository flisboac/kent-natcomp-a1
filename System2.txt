void system2Simulation(int A, int B, double da, double db, double ka, double kb, double Ka, double Kb, double h, double l){
	int At = A;
	int Bt = B;
	double time = 0;
	int counterMax = 1000;
	int counter = 0;

	vector<vector<double>> funcValues(counterMax);
	for ( int i = 0 ; i < 3 ; i++ ){
		funcValues[i].resize(counterMax);
	}
	funcValues[0].at(0) = At;
	funcValues[1].at(0) = Bt;
	funcValues[2].at(0) = 0;

	while(counter != counterMax){
	double rate1 = (double)ka*(pow(At,h)*Kb)/((Ka+pow(At, h))*(Kb+pow(Bt,l)));
	double rate2 = Bt*db;
	double rate3 = (double)kb*(pow(Bt,l)*Ka)/((Ka+pow(At, h))*(Kb+pow(Bt,l)));
	double rate4 = At*da;
	double rateSum = rate1+rate2+rate3+rate4;
	double rate1Norm = rate1/rateSum;
	double rate2Norm = rate2/rateSum;
	double rate3Norm = rate3/rateSum;
	double rate4Norm = rate4/rateSum;

	int reaction = 0;
	double randonN = rand()/(double)RAND_MAX;
	if(0<= randonN && randonN <rate1Norm){
		reaction = 1;
	}
	if(rate1Norm <= randonN && randonN <rate1Norm+rate2Norm){
		reaction = 2;
	}
	if(rate1Norm+rate2Norm <= randonN && randonN <rate1Norm+rate2Norm+rate3Norm){
		reaction = 3;
	}
	if(rate1Norm+rate2Norm+rate3Norm <= randonN && randonN <rate1Norm+rate2Norm+rate3Norm+rate4Norm){
		reaction = 4;
	}
	
	if(reaction == 1){
		Bt++;
	}else if(reaction == 2){
		if(Bt > 0){
			Bt--;
		}
	}else if(reaction == 3){
		At++;
	}else if(reaction == 4){
		if(At > 0){
			At--;
		}
	}

	double P = rate1+rate2+rate3+rate4;
	time += -(1/rateSum)*log(rand()/(double)RAND_MAX);
	funcValues[0].at(counter) = At/(double)(A+B);
	funcValues[1].at(counter) = Bt/(double)(A+B);
	funcValues[2].at(counter) = time;
	counter++;
	}
	printf("A                      B                       time");
	printf("\n");
	for(int i = 0; i<counterMax; i++){
		printf("%f                %f                  %f",(double)funcValues[0].at(i), (double)funcValues[1].at(i), (double)funcValues[2].at(i) );
		printf("\n");
	}
};